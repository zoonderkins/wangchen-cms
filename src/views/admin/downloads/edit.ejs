<%- contentFor('body') %>

<div class="container mx-auto px-4 py-8">
    <h2 class="my-6 text-2xl font-semibold text-gray-700">Edit Download</h2>
    <div class="flex text-sm breadcrumbs mb-4">
        <ul class="flex space-x-2">
            <li><a href="/admin/dashboard" class="text-blue-600 hover:text-blue-800">Dashboard</a></li>
            <li class="before:content-['/'] before:mx-2 before:text-gray-500"><a href="/admin/downloads" class="text-blue-600 hover:text-blue-800">Downloads</a></li>
            <li class="before:content-['/'] before:mx-2 before:text-gray-500"><span class="text-gray-600">Edit</span></li>
        </ul>
    </div>
    
    <%- include('../../partials/messages') %>
    
    <div class="px-4 py-3 mb-8 bg-white rounded-lg shadow-md">
        <div class="mb-4 pb-2 border-b border-gray-200">
            <div class="flex items-center">
                <i class="fas fa-edit mr-2 text-gray-600"></i>
                <h3 class="text-lg font-medium text-gray-700">Edit Download</h3>
            </div>
        </div>
        <form action="/admin/downloads/<%= download.id %>" method="POST" enctype="multipart/form-data">
            <div class="mb-4">
                <label for="title" class="block text-sm font-medium text-gray-700 mb-2">
                    Title <span class="text-red-500">*</span>
                </label>
                <input type="text" class="block w-full mt-1 text-sm border-gray-300 rounded-md focus:border-blue-500 focus:ring focus:ring-blue-200 focus:ring-opacity-50" 
                    id="title" name="title" value="<%= download.title %>" required>
                <p class="mt-1 text-xs text-gray-500">Enter a descriptive title for the download</p>
            </div>
            
            <div class="mb-4">
                <label for="description" class="block text-sm font-medium text-gray-700 mb-2">Description</label>
                <textarea class="block w-full mt-1 text-sm border-gray-300 rounded-md focus:border-blue-500 focus:ring focus:ring-blue-200 focus:ring-opacity-50" 
                    id="description" name="description" rows="3"><%= download.description || '' %></textarea>
                <p class="mt-1 text-xs text-gray-500">Provide a brief description of the file (optional)</p>
            </div>
            
            <div class="mb-4">
                <label for="keywords" class="block text-sm font-medium text-gray-700 mb-2">Keywords</label>
                <input type="text" class="block w-full mt-1 text-sm border-gray-300 rounded-md focus:border-blue-500 focus:ring focus:ring-blue-200 focus:ring-opacity-50" 
                    id="keywords" name="keywords" value="<%= download.keywords || '' %>">
                <p class="mt-1 text-xs text-gray-500">Enter keywords separated by commas to help with search (optional)</p>
            </div>
            
            <div class="mb-4">
                <label for="categoryId" class="block text-sm font-medium text-gray-700 mb-2">Category</label>
                <select class="block w-full mt-1 text-sm border-gray-300 rounded-md focus:border-blue-500 focus:ring focus:ring-blue-200 focus:ring-opacity-50" 
                    id="categoryId" name="categoryId">
                    <option value="">Select a category</option>
                    <% categories.forEach(category => { %>
                    <option value="<%= category.id %>" <%= download.categoryId === category.id ? 'selected' : '' %>><%= category.name %></option>
                    <% }); %>
                </select>
                <p class="mt-1 text-xs text-gray-500">Select a category to help organize downloads (optional)</p>
            </div>
            
            <div class="mb-4">
                <label for="status" class="block text-sm font-medium text-gray-700 mb-2">Status</label>
                <select class="block w-full mt-1 text-sm border-gray-300 rounded-md focus:border-blue-500 focus:ring focus:ring-blue-200 focus:ring-opacity-50" 
                    id="status" name="status">
                    <option value="draft" <%= download.status === 'draft' ? 'selected' : '' %>>Draft</option>
                    <option value="published" <%= download.status === 'published' ? 'selected' : '' %>>Published</option>
                </select>
                <p class="mt-1 text-xs text-gray-500">Only published downloads will be visible on the frontend</p>
            </div>
            
            <div class="mb-4">
                <label class="block text-sm font-medium text-gray-700 mb-2">Current File</label>
                <div class="bg-gray-50 rounded-lg p-4 border border-gray-200">
                    <div class="flex items-center">
                        <% 
                        let icon = 'fa-file';
                        if (download.mimeType.includes('pdf')) {
                            icon = 'fa-file-pdf';
                        } else if (download.mimeType.includes('word')) {
                            icon = 'fa-file-word';
                        } else if (download.mimeType.includes('excel') || download.mimeType.includes('spreadsheet')) {
                            icon = 'fa-file-excel';
                        } else if (download.mimeType.includes('image')) {
                            icon = 'fa-file-image';
                        } else if (download.mimeType.includes('zip') || download.mimeType.includes('rar')) {
                            icon = 'fa-file-archive';
                        }
                        %>
                        <i class="fas <%= icon %> fa-2x mr-3 text-gray-600"></i>
                        <div>
                            <div class="font-medium"><%= download.originalName %></div>
                            <div class="text-xs text-gray-500">
                                <%= download.mimeType %> | <%= (download.size / 1024).toFixed(2) %> KB
                            </div>
                        </div>
                        <a href="<%= download.path %>" target="_blank" class="ml-auto px-3 py-1 text-xs font-medium text-blue-600 bg-blue-100 rounded-md hover:bg-blue-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
                            <i class="fas fa-download mr-1"></i> Download
                        </a>
                    </div>
                </div>
            </div>
            
            <div class="mb-4">
                <label for="file" class="block text-sm font-medium text-gray-700 mb-2">Replace File</label>
                <input type="file" class="block w-full mt-1 text-sm border-gray-300 rounded-md focus:border-blue-500 focus:ring focus:ring-blue-200 focus:ring-opacity-50" 
                    id="file" name="file">
                <p class="mt-1 text-xs text-gray-500">
                    Leave empty to keep the current file. Uploading a new file will replace the existing one.<br>
                    Allowed file types: PDF, Word documents (.docx), Excel spreadsheets (.xlsx), Images (.jpg, .png), Archives (.zip, .rar)<br>
                    Maximum file size: 50MB
                </p>
            </div>
            
            <div class="flex justify-between mt-6">
                <a href="/admin/downloads" class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2">
                    Cancel
                </a>
                <div class="flex space-x-2">
                    <button type="submit" class="px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
                        Update
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<%- contentFor('script') %>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Form validation
        const form = document.querySelector('form');
        form.addEventListener('submit', function(event) {
            const titleInput = document.getElementById('title');
            
            if (!titleInput.value.trim()) {
                alert('Please enter a title for the download');
                event.preventDefault();
                return;
            }
            
            const fileInput = document.getElementById('file');
            if (fileInput.files && fileInput.files.length > 0) {
                const file = fileInput.files[0];
                const allowedTypes = [
                    'application/pdf', 
                    'application/msword', 
                    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
                    'application/vnd.ms-excel',
                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
                    'image/jpeg',
                    'image/png',
                    'image/gif',
                    'application/zip',
                    'application/x-rar-compressed'
                ];
                
                if (!allowedTypes.includes(file.type)) {
                    alert('Invalid file type. Please upload a PDF, Word, Excel, image, or archive file.');
                    event.preventDefault();
                    return;
                }
                
                const maxSize = 50 * 1024 * 1024; // 50MB
                if (file.size > maxSize) {
                    alert('File is too large. Maximum size is 50MB.');
                    event.preventDefault();
                    return;
                }
            }
        });
    });
</script>
